// Generated by CoffeeScript 1.3.3
var core, createObject, lapsedtime, main, removeObject, rootScene, _getNullObject, _objects;

_objects = [];

core = null;

main = null;

rootScene = null;

lapsedtime = 0;

enchant();

window.onload = function() {
  core = new Core(SCREEN_WIDTH, SCREEN_HEIGHT);
  rootScene = core.rootScene;
  core.rootScene.backgroundColor = BGCOLOR;
  core.fps = FPS;
  core.preload(IMAGELIST);
  core.onload = function() {
    var i, seedObject, _i;
    seedObject = Class.create(Sprite, {
      initialize: function() {
        return this.active = false;
      }
    });
    for (i = _i = 0; 0 <= OBJECTNUM ? _i < OBJECTNUM : _i > OBJECTNUM; i = 0 <= OBJECTNUM ? ++_i : --_i) {
      _objects[i] = new seedObject();
    }
    main = new enchantMain();
    core.rootScene.addEventListener('touchstart', function(e) {
      if (typeof main.touchesBegan === 'function') {
        return main.touchesBegan(e);
      }
    });
    core.rootScene.addEventListener('touchmove', function(e) {
      if (typeof main.touchesMoved === 'function') {
        return main.touchesMoved(e);
      }
    });
    core.rootScene.addEventListener('touchend', function(e) {
      if (typeof main.touchesEnded === 'function') {
        return main.touchesEnded(e);
      }
    });
    core.rootScene.addEventListener('touchcancel', function(e) {
      if (typeof main.touchesCanceled === 'function') {
        return main.touchesCanceled(e);
      }
    });
    return core.rootScene.addEventListener('enterframe', function(e) {
      return lapsedtime = Math.floor(core.frame / FPS);
    });
  };
  return core.start();
};

createObject = function(x, y, xs, ys, g, image, cellx, celly, opacity, seedobj, animlist, animnum, visible) {
  var animpattern, obj;
  obj = _getNullObject();
  if (obj === null) {
    return;
  }
  Sprite.call(obj, cellx, celly);
  obj.backgroundColor = "transparent";
  obj.x = x;
  obj.y = y;
  obj.width = cellx;
  obj.height = celly;
  obj.opacity = opacity;
  obj.originX = cellx / 2;
  obj.originY = celly / 2;
  obj.rotation = 0.0;
  obj.scaleX = 1.0;
  obj.scaleY = 1.0;
  core.rootScene.addChild(obj);
  obj.xs = xs;
  obj.ys = ys;
  obj.gravity = g;
  obj.animlist = animlist;
  obj.animnum = animnum;
  obj.visible = visible;
  if (IMAGELIST[image] !== null) {
    obj.image = core.assets[IMAGELIST[image]];
  }
  if (obj.animlist !== null) {
    animpattern = obj.animlist[obj.animnum];
    obj.frame = animpattern[0];
  }
  if (seedobj !== null) {
    obj.characterObj = new seedobj(obj);
  }
  obj.addEventListener('enterframe', function() {
    obj.ys += obj.gravity;
    obj.x += obj.xs;
    obj.y += obj.ys;
    if (obj.animlist !== null) {
      animpattern = obj.animlist[obj.animnum];
      obj.frame = animpattern[obj.age % animpattern.length];
    }
    if (obj.characterObj !== null && typeof obj.characterObj.behavior === 'function') {
      return obj.characterObj.behavior();
    }
  });
  return obj;
};

removeObject = function(obj) {
  var i, s, _i, _ref;
  for (i = _i = 0, _ref = obj.childlist.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
    s = obj.childlist[i];
    core.rootScene.removeChild(s);
  }
  obj.sprite.backgroundColor = "transparent";
  obj.sprite.width = 0;
  obj.sprite.height = 0;
  obj.sprite.opacity = 0;
  obj.sprite.originX = 0;
  obj.sprite.originY = 0;
  obj.sprite.rotation = 0;
  obj.sprite.scaleX = 0;
  obj.sprite.scaleY = 0;
  obj.sprite.x = 0;
  obj.sprite.y = 0;
  obj.sprite.xs = 0;
  obj.sprite.ys = 0;
  obj.sprite.gravity = 0;
  obj.sprite.animlist = [];
  obj.sprite.animnum = 0;
  obj.sprite.active = false;
  obj.sprite.visible = false;
  obj.sprite.removeEventListener('enterframe');
  obj.sprite.characterObj = null;
  return core.rootScene.removeChild(obj.sprite);
};

_getNullObject = function() {
  var i, obj, _i, _ref;
  obj = null;
  for (i = _i = 0, _ref = _objects.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
    if (_objects[i].active === false) {
      obj = _objects[i];
      obj.active = true;
      obj.visible = false;
      break;
    }
  }
  return obj;
};
